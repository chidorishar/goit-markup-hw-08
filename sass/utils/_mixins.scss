@mixin flex--v-centred {
  display: flex;
  align-items: center;
}

@mixin flex--vh-centred {
  @include flex--v-centred;

  justify-content: center;
}

@mixin flex-grid-container($marginTop, $marginLeft, $allowWarp: false) {
  display: flex;

  @if $allowWarp {
    flex-wrap: wrap;
  }
  margin-top: -1 * $marginTop;
  margin-left: -1 * $marginLeft;
}

@mixin flex-grid-item(
  $marginTop,
  $marginLeft,
  $width: 0px,
  $height: 0px,
  $allowResize: false,
  $quantityInRow: 0,
  $max-width: max-content,
  $min-width: min-content
) {
  margin-top: $marginTop;
  margin-left: $marginLeft;

  @if $allowResize {
    width: calc(100% / $quantityInRow - $marginLeft);
    max-width: $max-width;
    min-width: $min-width;
  } @else {
    width: $width;
    height: $height;
  }
}

@mixin mediaScreenDensity2x {
  @media screen and (min-device-pixel-ratio: 2), (min-resolution: 192dpi), (min-resolution: 2dppx) {
    @content;
  }
}

@mixin mediaUpTo($bp) {
  @if map-has-key($breakpoints, $bp) {
    @media screen and (max-width: (map-get($breakpoints, $bp) - 0.02px)) {
      @content;
    }
  } @else {
    @media screen and (max-width: $bp) {
      @content;
    }
  }
}

@mixin mediaOver($bp) {
  @if map-has-key($breakpoints, $bp) {
    @media screen and (min-width: map-get($breakpoints, $bp)) {
      @content;
    }
  } @else {
    @media screen and (min-width: $bp) {
      @content;
    }
  }
}

@mixin mediaInBetween($bpFrom, $bpTo) {
  @if map-has-key($breakpoints, $bpFrom) and map-has-key($breakpoints, $bpTo) {
    @media screen and (min-width: map-get($breakpoints, $bpFrom)) and (max-width: (map-get($breakpoints, $bpTo) - 0.02px)) {
      @content;
    }
  } @else {
    @media screen and (min-width: ($bpFrom + 1)) and (max-width: ($bpTo - 1)) {
      @content;
    }
  }
}
